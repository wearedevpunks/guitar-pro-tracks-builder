// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-fetch';
import type { SongCreateData, SongCreateResponse, SongCreateError, GetSongByIdApiSongsSongIdGetData, GetSongByIdApiSongsSongIdGetResponse, GetSongByIdApiSongsSongIdGetError, HandleChatDataApiChatPostData, HandleChatDataApiChatPostError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Create New Song
 * Create a new song by uploading a Guitar Pro file.
 *
 * This endpoint accepts a Guitar Pro file, saves it using the configured storage service,
 * and creates a new tab entry in the tabs collection.
 */
export const songCreate = <ThrowOnError extends boolean = false>(options: Options<SongCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SongCreateResponse, SongCreateError, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/api/songs/new',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * Get Song By Id
 * Get a song by its ID.
 *
 * This endpoint retrieves a song's tab information including the tab ID and file reference.
 */
export const getSongByIdApiSongsSongIdGet = <ThrowOnError extends boolean = false>(options: Options<GetSongByIdApiSongsSongIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSongByIdApiSongsSongIdGetResponse, GetSongByIdApiSongsSongIdGetError, ThrowOnError>({
        url: '/api/songs/{song_id}',
        ...options
    });
};

/**
 * Chat with AI Assistant
 * Stream chat responses from OpenAI with tool calling support for weather information
 */
export const handleChatDataApiChatPost = <ThrowOnError extends boolean = false>(options: Options<HandleChatDataApiChatPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, HandleChatDataApiChatPostError, ThrowOnError>({
        url: '/api/chat',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};